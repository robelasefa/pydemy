name: Publish to Test PyPI

on:
  push:
    tags:
      - "v*" # Triggers only on version tags

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout Code
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Install Build Tools
        run: python3 -m pip install build --user
      - name: Build Distribution
        run: python3 -m build
      - name: Upload Distribution Packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-test-pypi:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: release_test_pypi
      url: https://test.pypi.org/project/pydemy-test/
    permissions:
      id-token: write # Mandatory for trusted publishing

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  github-test-release:
    name: Create GitHub Release Draft
    needs: publish-to-test-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Create GitHub Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} --repo ${{ github.repository }} --notes "Release notes for ${{ github.ref_name }}" --draft
      - name: Upload Artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} dist/** --repo ${{ github.repository }}
